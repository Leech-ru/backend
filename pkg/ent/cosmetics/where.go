// Code generated by ent, DO NOT EDIT.

package cosmetics

import (
	"Leech-ru/internal/domain/types"
	"Leech-ru/pkg/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldLTE(FieldID, id))
}

// Category applies equality check predicate on the "category" field. It's identical to CategoryEQ.
func Category(v types.Category) predicate.Cosmetics {
	vc := int(v)
	return predicate.Cosmetics(sql.FieldEQ(FieldCategory, vc))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEQ(FieldTitle, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEQ(FieldDescription, v))
}

// ApplicationMethod applies equality check predicate on the "applicationMethod" field. It's identical to ApplicationMethodEQ.
func ApplicationMethod(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEQ(FieldApplicationMethod, v))
}

// Volume applies equality check predicate on the "volume" field. It's identical to VolumeEQ.
func Volume(v int) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEQ(FieldVolume, v))
}

// OzonLink applies equality check predicate on the "ozon_link" field. It's identical to OzonLinkEQ.
func OzonLink(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEQ(FieldOzonLink, v))
}

// WildberriesLink applies equality check predicate on the "wildberries_link" field. It's identical to WildberriesLinkEQ.
func WildberriesLink(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEQ(FieldWildberriesLink, v))
}

// CategoryEQ applies the EQ predicate on the "category" field.
func CategoryEQ(v types.Category) predicate.Cosmetics {
	vc := int(v)
	return predicate.Cosmetics(sql.FieldEQ(FieldCategory, vc))
}

// CategoryNEQ applies the NEQ predicate on the "category" field.
func CategoryNEQ(v types.Category) predicate.Cosmetics {
	vc := int(v)
	return predicate.Cosmetics(sql.FieldNEQ(FieldCategory, vc))
}

// CategoryIn applies the In predicate on the "category" field.
func CategoryIn(vs ...types.Category) predicate.Cosmetics {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = int(vs[i])
	}
	return predicate.Cosmetics(sql.FieldIn(FieldCategory, v...))
}

// CategoryNotIn applies the NotIn predicate on the "category" field.
func CategoryNotIn(vs ...types.Category) predicate.Cosmetics {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = int(vs[i])
	}
	return predicate.Cosmetics(sql.FieldNotIn(FieldCategory, v...))
}

// CategoryGT applies the GT predicate on the "category" field.
func CategoryGT(v types.Category) predicate.Cosmetics {
	vc := int(v)
	return predicate.Cosmetics(sql.FieldGT(FieldCategory, vc))
}

// CategoryGTE applies the GTE predicate on the "category" field.
func CategoryGTE(v types.Category) predicate.Cosmetics {
	vc := int(v)
	return predicate.Cosmetics(sql.FieldGTE(FieldCategory, vc))
}

// CategoryLT applies the LT predicate on the "category" field.
func CategoryLT(v types.Category) predicate.Cosmetics {
	vc := int(v)
	return predicate.Cosmetics(sql.FieldLT(FieldCategory, vc))
}

// CategoryLTE applies the LTE predicate on the "category" field.
func CategoryLTE(v types.Category) predicate.Cosmetics {
	vc := int(v)
	return predicate.Cosmetics(sql.FieldLTE(FieldCategory, vc))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldContainsFold(FieldTitle, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldContainsFold(FieldDescription, v))
}

// ApplicationMethodEQ applies the EQ predicate on the "applicationMethod" field.
func ApplicationMethodEQ(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEQ(FieldApplicationMethod, v))
}

// ApplicationMethodNEQ applies the NEQ predicate on the "applicationMethod" field.
func ApplicationMethodNEQ(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNEQ(FieldApplicationMethod, v))
}

// ApplicationMethodIn applies the In predicate on the "applicationMethod" field.
func ApplicationMethodIn(vs ...string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldIn(FieldApplicationMethod, vs...))
}

// ApplicationMethodNotIn applies the NotIn predicate on the "applicationMethod" field.
func ApplicationMethodNotIn(vs ...string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNotIn(FieldApplicationMethod, vs...))
}

// ApplicationMethodGT applies the GT predicate on the "applicationMethod" field.
func ApplicationMethodGT(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldGT(FieldApplicationMethod, v))
}

// ApplicationMethodGTE applies the GTE predicate on the "applicationMethod" field.
func ApplicationMethodGTE(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldGTE(FieldApplicationMethod, v))
}

// ApplicationMethodLT applies the LT predicate on the "applicationMethod" field.
func ApplicationMethodLT(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldLT(FieldApplicationMethod, v))
}

// ApplicationMethodLTE applies the LTE predicate on the "applicationMethod" field.
func ApplicationMethodLTE(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldLTE(FieldApplicationMethod, v))
}

// ApplicationMethodContains applies the Contains predicate on the "applicationMethod" field.
func ApplicationMethodContains(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldContains(FieldApplicationMethod, v))
}

// ApplicationMethodHasPrefix applies the HasPrefix predicate on the "applicationMethod" field.
func ApplicationMethodHasPrefix(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldHasPrefix(FieldApplicationMethod, v))
}

// ApplicationMethodHasSuffix applies the HasSuffix predicate on the "applicationMethod" field.
func ApplicationMethodHasSuffix(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldHasSuffix(FieldApplicationMethod, v))
}

// ApplicationMethodIsNil applies the IsNil predicate on the "applicationMethod" field.
func ApplicationMethodIsNil() predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldIsNull(FieldApplicationMethod))
}

// ApplicationMethodNotNil applies the NotNil predicate on the "applicationMethod" field.
func ApplicationMethodNotNil() predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNotNull(FieldApplicationMethod))
}

// ApplicationMethodEqualFold applies the EqualFold predicate on the "applicationMethod" field.
func ApplicationMethodEqualFold(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEqualFold(FieldApplicationMethod, v))
}

// ApplicationMethodContainsFold applies the ContainsFold predicate on the "applicationMethod" field.
func ApplicationMethodContainsFold(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldContainsFold(FieldApplicationMethod, v))
}

// VolumeEQ applies the EQ predicate on the "volume" field.
func VolumeEQ(v int) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEQ(FieldVolume, v))
}

// VolumeNEQ applies the NEQ predicate on the "volume" field.
func VolumeNEQ(v int) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNEQ(FieldVolume, v))
}

// VolumeIn applies the In predicate on the "volume" field.
func VolumeIn(vs ...int) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldIn(FieldVolume, vs...))
}

// VolumeNotIn applies the NotIn predicate on the "volume" field.
func VolumeNotIn(vs ...int) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNotIn(FieldVolume, vs...))
}

// VolumeGT applies the GT predicate on the "volume" field.
func VolumeGT(v int) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldGT(FieldVolume, v))
}

// VolumeGTE applies the GTE predicate on the "volume" field.
func VolumeGTE(v int) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldGTE(FieldVolume, v))
}

// VolumeLT applies the LT predicate on the "volume" field.
func VolumeLT(v int) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldLT(FieldVolume, v))
}

// VolumeLTE applies the LTE predicate on the "volume" field.
func VolumeLTE(v int) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldLTE(FieldVolume, v))
}

// VolumeIsNil applies the IsNil predicate on the "volume" field.
func VolumeIsNil() predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldIsNull(FieldVolume))
}

// VolumeNotNil applies the NotNil predicate on the "volume" field.
func VolumeNotNil() predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNotNull(FieldVolume))
}

// OzonLinkEQ applies the EQ predicate on the "ozon_link" field.
func OzonLinkEQ(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEQ(FieldOzonLink, v))
}

// OzonLinkNEQ applies the NEQ predicate on the "ozon_link" field.
func OzonLinkNEQ(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNEQ(FieldOzonLink, v))
}

// OzonLinkIn applies the In predicate on the "ozon_link" field.
func OzonLinkIn(vs ...string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldIn(FieldOzonLink, vs...))
}

// OzonLinkNotIn applies the NotIn predicate on the "ozon_link" field.
func OzonLinkNotIn(vs ...string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNotIn(FieldOzonLink, vs...))
}

// OzonLinkGT applies the GT predicate on the "ozon_link" field.
func OzonLinkGT(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldGT(FieldOzonLink, v))
}

// OzonLinkGTE applies the GTE predicate on the "ozon_link" field.
func OzonLinkGTE(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldGTE(FieldOzonLink, v))
}

// OzonLinkLT applies the LT predicate on the "ozon_link" field.
func OzonLinkLT(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldLT(FieldOzonLink, v))
}

// OzonLinkLTE applies the LTE predicate on the "ozon_link" field.
func OzonLinkLTE(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldLTE(FieldOzonLink, v))
}

// OzonLinkContains applies the Contains predicate on the "ozon_link" field.
func OzonLinkContains(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldContains(FieldOzonLink, v))
}

// OzonLinkHasPrefix applies the HasPrefix predicate on the "ozon_link" field.
func OzonLinkHasPrefix(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldHasPrefix(FieldOzonLink, v))
}

// OzonLinkHasSuffix applies the HasSuffix predicate on the "ozon_link" field.
func OzonLinkHasSuffix(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldHasSuffix(FieldOzonLink, v))
}

// OzonLinkIsNil applies the IsNil predicate on the "ozon_link" field.
func OzonLinkIsNil() predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldIsNull(FieldOzonLink))
}

// OzonLinkNotNil applies the NotNil predicate on the "ozon_link" field.
func OzonLinkNotNil() predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNotNull(FieldOzonLink))
}

// OzonLinkEqualFold applies the EqualFold predicate on the "ozon_link" field.
func OzonLinkEqualFold(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEqualFold(FieldOzonLink, v))
}

// OzonLinkContainsFold applies the ContainsFold predicate on the "ozon_link" field.
func OzonLinkContainsFold(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldContainsFold(FieldOzonLink, v))
}

// WildberriesLinkEQ applies the EQ predicate on the "wildberries_link" field.
func WildberriesLinkEQ(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEQ(FieldWildberriesLink, v))
}

// WildberriesLinkNEQ applies the NEQ predicate on the "wildberries_link" field.
func WildberriesLinkNEQ(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNEQ(FieldWildberriesLink, v))
}

// WildberriesLinkIn applies the In predicate on the "wildberries_link" field.
func WildberriesLinkIn(vs ...string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldIn(FieldWildberriesLink, vs...))
}

// WildberriesLinkNotIn applies the NotIn predicate on the "wildberries_link" field.
func WildberriesLinkNotIn(vs ...string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNotIn(FieldWildberriesLink, vs...))
}

// WildberriesLinkGT applies the GT predicate on the "wildberries_link" field.
func WildberriesLinkGT(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldGT(FieldWildberriesLink, v))
}

// WildberriesLinkGTE applies the GTE predicate on the "wildberries_link" field.
func WildberriesLinkGTE(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldGTE(FieldWildberriesLink, v))
}

// WildberriesLinkLT applies the LT predicate on the "wildberries_link" field.
func WildberriesLinkLT(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldLT(FieldWildberriesLink, v))
}

// WildberriesLinkLTE applies the LTE predicate on the "wildberries_link" field.
func WildberriesLinkLTE(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldLTE(FieldWildberriesLink, v))
}

// WildberriesLinkContains applies the Contains predicate on the "wildberries_link" field.
func WildberriesLinkContains(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldContains(FieldWildberriesLink, v))
}

// WildberriesLinkHasPrefix applies the HasPrefix predicate on the "wildberries_link" field.
func WildberriesLinkHasPrefix(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldHasPrefix(FieldWildberriesLink, v))
}

// WildberriesLinkHasSuffix applies the HasSuffix predicate on the "wildberries_link" field.
func WildberriesLinkHasSuffix(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldHasSuffix(FieldWildberriesLink, v))
}

// WildberriesLinkIsNil applies the IsNil predicate on the "wildberries_link" field.
func WildberriesLinkIsNil() predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldIsNull(FieldWildberriesLink))
}

// WildberriesLinkNotNil applies the NotNil predicate on the "wildberries_link" field.
func WildberriesLinkNotNil() predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldNotNull(FieldWildberriesLink))
}

// WildberriesLinkEqualFold applies the EqualFold predicate on the "wildberries_link" field.
func WildberriesLinkEqualFold(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldEqualFold(FieldWildberriesLink, v))
}

// WildberriesLinkContainsFold applies the ContainsFold predicate on the "wildberries_link" field.
func WildberriesLinkContainsFold(v string) predicate.Cosmetics {
	return predicate.Cosmetics(sql.FieldContainsFold(FieldWildberriesLink, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Cosmetics) predicate.Cosmetics {
	return predicate.Cosmetics(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Cosmetics) predicate.Cosmetics {
	return predicate.Cosmetics(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Cosmetics) predicate.Cosmetics {
	return predicate.Cosmetics(sql.NotPredicates(p))
}
