// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CosmeticsColumns holds the columns for the "cosmetics" table.
	CosmeticsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "category", Type: field.TypeInt},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "application_method", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "volume", Type: field.TypeInt, Nullable: true},
		{Name: "ozon_link", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "wildberries_link", Type: field.TypeString, Nullable: true, Default: ""},
	}
	// CosmeticsTable holds the schema information for the "cosmetics" table.
	CosmeticsTable = &schema.Table{
		Name:       "cosmetics",
		Columns:    CosmeticsColumns,
		PrimaryKey: []*schema.Column{CosmeticsColumns[0]},
	}
	// RefreshTokensColumns holds the columns for the "refresh_tokens" table.
	RefreshTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "jti", Type: field.TypeString},
		{Name: "user_refresh_tokens", Type: field.TypeUUID, Unique: true},
	}
	// RefreshTokensTable holds the schema information for the "refresh_tokens" table.
	RefreshTokensTable = &schema.Table{
		Name:       "refresh_tokens",
		Columns:    RefreshTokensColumns,
		PrimaryKey: []*schema.Column{RefreshTokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "refresh_tokens_users_refresh_tokens",
				Columns:    []*schema.Column{RefreshTokensColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "surname", Type: field.TypeString, Size: 100},
		{Name: "role", Type: field.TypeInt, Default: 0},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CosmeticsTable,
		RefreshTokensTable,
		UsersTable,
	}
)

func init() {
	RefreshTokensTable.ForeignKeys[0].RefTable = UsersTable
}
