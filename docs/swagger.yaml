definitions:
  dto.Cosmetics:
    description: Contains product information such as category, title, description,
      and volume.
    properties:
      application_method:
        example: Apply to wet hair, lather, rinse.
        type: string
      category:
        allOf:
        - $ref: '#/definitions/types.Category'
        example: 3
      description:
        example: Suitable for daily use.
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      links:
        $ref: '#/definitions/dto.Links'
      title:
        example: Hair Shampoo
        type: string
      volume:
        example: 250
        type: integer
    type: object
  dto.CreateCosmeticsRequest:
    properties:
      application_method:
        example: Apply to wet hair, lather, rinse.
        maxLength: 500
        minLength: 3
        type: string
      category:
        allOf:
        - $ref: '#/definitions/types.Category'
        example: 3
      description:
        example: Suitable for daily use.
        maxLength: 3000
        minLength: 3
        type: string
      links:
        $ref: '#/definitions/dto.Links'
      title:
        example: Hair Shampoo
        maxLength: 100
        minLength: 3
        type: string
      volume:
        example: 250
        maximum: 10000
        minimum: 1
        type: integer
    required:
    - category
    - title
    type: object
  dto.CreateCosmeticsResponse:
    description: Contains product information such as category, title, description,
      and volume.
    properties:
      application_method:
        example: Apply to wet hair, lather, rinse.
        type: string
      category:
        allOf:
        - $ref: '#/definitions/types.Category'
        example: 3
      description:
        example: Suitable for daily use.
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      links:
        $ref: '#/definitions/dto.Links'
      title:
        example: Hair Shampoo
        type: string
      volume:
        example: 250
        type: integer
    type: object
  dto.GetCosmeticsResponse:
    description: Contains product information such as category, title, description,
      and volume.
    properties:
      application_method:
        example: Apply to wet hair, lather, rinse.
        type: string
      category:
        allOf:
        - $ref: '#/definitions/types.Category'
        example: 3
      description:
        example: Suitable for daily use.
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      links:
        $ref: '#/definitions/dto.Links'
      title:
        example: Hair Shampoo
        type: string
      volume:
        example: 250
        type: integer
    type: object
  dto.GetInfoResponse:
    properties:
      description:
        example: We are a global leader in innovation and technology.
        maxLength: 500
        minLength: 10
        type: string
      fluid:
        example: true
        type: boolean
      heading:
        example: Welcome to our company
        maxLength: 100
        minLength: 3
        type: string
      links:
        items:
          $ref: '#/definitions/dto.InfoLinks'
        type: array
      schedule:
        items:
          $ref: '#/definitions/dto.ScheduleEntry'
        type: array
    required:
    - description
    - heading
    type: object
  dto.HTTPStatus:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  dto.Hours:
    properties:
      close:
        example: "18:00"
        type: string
      open:
        example: "09:00"
        type: string
    required:
    - close
    - open
    type: object
  dto.InfoLinks:
    properties:
      href:
        example: https://instagram.com/company
        maxLength: 500
        type: string
      label:
        example: Instagram
        maxLength: 50
        minLength: 2
        type: string
    required:
    - href
    - label
    type: object
  dto.Links:
    properties:
      ozon:
        example: https://www.ozon.ru/product/gel-girudo-dr-nikonov-dlya-tela-100-ml-1907286044/?at=OgtEDAg59hR8AYgGimrnA9YIqYo9mocJYEzPjHR666Gm
        maxLength: 500
        type: string
      wildberries:
        example: https://www.wildberries.ru/catalog/344283033/detail.aspx
        maxLength: 500
        type: string
    type: object
  dto.ScheduleEntry:
    properties:
      hours:
        $ref: '#/definitions/dto.Hours'
      weekday:
        allOf:
        - $ref: '#/definitions/types.Weekday'
        description: Monday
        example: 1
    required:
    - hours
    - weekday
    type: object
  dto.UpdateCosmeticsRequest:
    properties:
      application_method:
        example: Apply evenly and rinse well.
        maxLength: 500
        minLength: 3
        type: string
      category:
        allOf:
        - $ref: '#/definitions/types.Category'
        example: 4
      description:
        example: Updated product description.
        maxLength: 3000
        minLength: 3
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      links:
        $ref: '#/definitions/dto.Links'
      title:
        example: New Hair Shampoo
        maxLength: 100
        minLength: 3
        type: string
      volume:
        example: 500
        maximum: 10000
        minimum: 1
        type: integer
    required:
    - id
    type: object
  dto.UpdateCosmeticsResponse:
    description: Contains product information such as category, title, description,
      and volume.
    properties:
      application_method:
        example: Apply to wet hair, lather, rinse.
        type: string
      category:
        allOf:
        - $ref: '#/definitions/types.Category'
        example: 3
      description:
        example: Suitable for daily use.
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      links:
        $ref: '#/definitions/dto.Links'
      title:
        example: Hair Shampoo
        type: string
      volume:
        example: 250
        type: integer
    type: object
  dto.UpdateInfoRequest:
    properties:
      description:
        example: Updated long description about the company.
        maxLength: 500
        minLength: 10
        type: string
      fluid:
        example: false
        type: boolean
      heading:
        example: Updated Heading
        maxLength: 100
        minLength: 3
        type: string
      links:
        items:
          $ref: '#/definitions/dto.InfoLinks'
        type: array
      schedule:
        items:
          $ref: '#/definitions/dto.ScheduleEntry'
        type: array
    type: object
  dto.UpdateInfoResponse:
    properties:
      description:
        example: We are a global leader in innovation and technology.
        maxLength: 500
        minLength: 10
        type: string
      fluid:
        example: true
        type: boolean
      heading:
        example: Welcome to our company
        maxLength: 100
        minLength: 3
        type: string
      links:
        items:
          $ref: '#/definitions/dto.InfoLinks'
        type: array
      schedule:
        items:
          $ref: '#/definitions/dto.ScheduleEntry'
        type: array
    required:
    - description
    - heading
    type: object
  types.Category:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    type: integer
    x-enum-varnames:
    - CategoryMainFace
    - CategoryMainBody
    - CategoryHairCare
    - CategoryMen
    - CategoryIntensive
    - CategoryLuxury
    - CategoryExclusive
    - CategoryWholesale
    - CategoryLeech
  types.Weekday:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    type: integer
    x-enum-varnames:
    - Monday
    - Tuesday
    - Wednesday
    - Thursday
    - Friday
    - Saturday
    - Sunday
host: пиявкипобеда.рф
info:
  contact:
    email: mmishin2107@gmail.com
    name: API Support
  description: Backend service for Leech-ru platform.
  title: Leech API
  version: "1.0"
paths:
  /api/v1/cosmetics:
    get:
      consumes:
      - application/json
      description: Retrieves a list of cosmetics filtered by category, volume, title,
        etc.
      parameters:
      - description: Max number of items
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: Offset for pagination
        in: query
        minimum: 0
        name: offset
        type: integer
      - description: Category enum (0–8)
        enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        in: query
        name: category
        type: integer
      - description: Filter by title prefix
        in: query
        name: titlePrefix
        type: string
      - description: Exact volume in ml
        in: query
        maximum: 10000
        minimum: 1
        name: volume
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Cosmetics'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
      summary: Get cosmetics by filters
      tags:
      - cosmetics
    post:
      consumes:
      - application/json
      description: Creates a new cosmetic product with provided details.
      parameters:
      - description: Cosmetic product data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCosmeticsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CreateCosmeticsResponse'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
        "409":
          description: 'Conflict: invalid cosmetics format'
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
      summary: Create a new cosmetic product
      tags:
      - cosmetics
  /api/v1/cosmetics/{id}:
    delete:
      description: Deletes the cosmetic product with the given UUID.
      parameters:
      - description: Cosmetic ID (UUID)
        format: uuid
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Successfully deleted
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
        "404":
          description: Cosmetic not found
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
      summary: Delete cosmetic by ID
      tags:
      - cosmetics
    get:
      consumes:
      - application/json
      description: Retrieves a cosmetic product using its UUID.
      parameters:
      - description: Cosmetic ID (UUID)
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetCosmeticsResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
        "404":
          description: Cosmetic not found
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
      summary: Get cosmetic by ID
      tags:
      - cosmetics
    patch:
      consumes:
      - application/json
      description: Updates cosmetic product fields by given ID.
      parameters:
      - description: Cosmetic ID (UUID)
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Updated cosmetic fields
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateCosmeticsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateCosmeticsResponse'
        "400":
          description: Validation or binding error
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
        "404":
          description: Cosmetic not found
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
      summary: Update cosmetic
      tags:
      - cosmetics
  /info/corporation:
    get:
      consumes:
      - application/json
      description: 'Returns the current public corporation information: heading, description,
        fluid status, schedule, and links.'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetInfoResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
      summary: Get corporation info
      tags:
      - info
    patch:
      consumes:
      - application/json
      description: |-
        Updates the corporation info fields. Only accessible by authenticated moderators.
        Requires authentication via cookies (access_token, refresh_token)
      parameters:
      - description: Updated corporation info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateInfoResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.HTTPStatus'
      summary: Update corporation info
      tags:
      - info
schemes:
- http
swagger: "2.0"
