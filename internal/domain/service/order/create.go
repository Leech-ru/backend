package order

import (
	"LutiLeech/internal/domain/dto"
	"context"
	"sync"
)

const (
	CorporateEmail = "corporate0mail@gmail.com"
)

func (s *Service) Create(_ context.Context, req *dto.CreateOrderRequest) (*dto.CreateOrderResponse, error) {
	var wg sync.WaitGroup
	var err error
	var mu sync.Mutex

	wg.Add(2)

	go func() {
		defer wg.Done()

		recipients := []string{CorporateEmail}
		topic := "!–ê–õ–ï–†–¢! –ù–û–í–´–ô –ó–ê–ö–ê–ó"
		body := "–°–†–û–ß–ù–û –°–†–û–ß–ù–û –ó–ê–ö–ê–ó–ê–õ–ò –ü–ò–Ø–í–û–ö\n–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê\n–°–†–û–ß–ù–û –ù–ê–î–û –ò–• –û–¢–ü–†–ê–í–ò–¢–¨\n–í–ü–ï–†–ï–î –†–ê–ë–û–¢–ê–¢–¨ –°–û–õ–ù–¶–ï –ï–©–ï –í–´–°–û–ö–û"

		if sendErr := s.mailService.SendEmail(recipients, topic, body); sendErr != nil {
			mu.Lock()
			err = sendErr
			mu.Unlock()
		}
	}()

	go func() {
		defer wg.Done()

		recipients := []string{req.Customer}
		topic := "–£ –≤–∞—Å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑üòá"
		body := "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å\n–ú—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ —Å–æ–±–∏—Ä–∞—Ç—å –≤–∞—à –∑–∞–∫–∞–∑\n–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–πüòä"

		if sendErr := s.mailService.SendEmail(recipients, topic, body); sendErr != nil {
			mu.Lock()
			err = sendErr
			mu.Unlock()
		}
	}()

	wg.Wait()
	if err != nil {
		return nil, err
	}
	return &dto.CreateOrderResponse{
		Status: "ok",
	}, nil
}
